// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using RedSquirrel.Data;
using System;

namespace redsquirrelcore.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20180127185224_location-owner")]
    partial class locationowner
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.SerialColumn)
                .HasAnnotation("ProductVersion", "2.0.0-rtm-26452");

            modelBuilder.Entity("RedSquirrel.Data.Entities.Food", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("Food");
                });

            modelBuilder.Entity("RedSquirrel.Data.Entities.FoodConversion", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<long?>("FirstUnitId");

                    b.Property<long?>("FoodId");

                    b.Property<double>("Ratio");

                    b.Property<long?>("SecondUnitId");

                    b.HasKey("Id");

                    b.HasIndex("FirstUnitId");

                    b.HasIndex("FoodId");

                    b.HasIndex("SecondUnitId");

                    b.ToTable("FoodConversion");
                });

            modelBuilder.Entity("RedSquirrel.Data.Entities.Inventory", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<double>("Amount");

                    b.Property<long?>("FoodId");

                    b.Property<long?>("LocationId");

                    b.HasKey("Id");

                    b.HasIndex("FoodId");

                    b.HasIndex("LocationId");

                    b.ToTable("Inventory");
                });

            modelBuilder.Entity("RedSquirrel.Data.Entities.Location", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name");

                    b.Property<long?>("OwnerUserId");

                    b.HasKey("Id");

                    b.HasIndex("OwnerUserId");

                    b.ToTable("Location");
                });

            modelBuilder.Entity("RedSquirrel.Data.Entities.Unit", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("Unit");
                });

            modelBuilder.Entity("RedSquirrel.Data.Entities.UnitConversion", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<long?>("FirstUnitId");

                    b.Property<double>("Ratio");

                    b.Property<long?>("SecondUnitId");

                    b.HasKey("Id");

                    b.HasIndex("FirstUnitId");

                    b.HasIndex("SecondUnitId");

                    b.ToTable("UnitConversion");
                });

            modelBuilder.Entity("RedSquirrel.Data.Entities.User", b =>
                {
                    b.Property<long>("UserId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Email");

                    b.Property<string>("ExternalUserId");

                    b.Property<string>("Name");

                    b.HasKey("UserId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("RedSquirrel.Data.Entities.FoodConversion", b =>
                {
                    b.HasOne("RedSquirrel.Data.Entities.Unit", "FirstUnit")
                        .WithMany()
                        .HasForeignKey("FirstUnitId");

                    b.HasOne("RedSquirrel.Data.Entities.Food", "Food")
                        .WithMany()
                        .HasForeignKey("FoodId");

                    b.HasOne("RedSquirrel.Data.Entities.Unit", "SecondUnit")
                        .WithMany()
                        .HasForeignKey("SecondUnitId");
                });

            modelBuilder.Entity("RedSquirrel.Data.Entities.Inventory", b =>
                {
                    b.HasOne("RedSquirrel.Data.Entities.Food", "Food")
                        .WithMany()
                        .HasForeignKey("FoodId");

                    b.HasOne("RedSquirrel.Data.Entities.Location", "Location")
                        .WithMany()
                        .HasForeignKey("LocationId");
                });

            modelBuilder.Entity("RedSquirrel.Data.Entities.Location", b =>
                {
                    b.HasOne("RedSquirrel.Data.Entities.User", "Owner")
                        .WithMany("Locations")
                        .HasForeignKey("OwnerUserId");
                });

            modelBuilder.Entity("RedSquirrel.Data.Entities.UnitConversion", b =>
                {
                    b.HasOne("RedSquirrel.Data.Entities.Unit", "FirstUnit")
                        .WithMany()
                        .HasForeignKey("FirstUnitId");

                    b.HasOne("RedSquirrel.Data.Entities.Unit", "SecondUnit")
                        .WithMany()
                        .HasForeignKey("SecondUnitId");
                });
#pragma warning restore 612, 618
        }
    }
}
